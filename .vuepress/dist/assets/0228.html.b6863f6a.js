import{_ as s,o as a,c as t,b as n,e as p}from"./app.4ad97c89.js";const e={},o=n("div",{class:"custom-container info"},[n("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[n("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[n("circle",{cx:"12",cy:"12",r:"9"}),n("path",{d:"M12 8h.01"}),n("path",{d:"M11 12h1v4h1"})])]),n("p",{class:"custom-container-title"},"INFO"),n("p",null,"Vue2\u5230Vue3\u7684\u6027\u80FD\u63D0\u5347\uFF0C\u539F\u56E0\u4E0D\u80FD\u7B80\u5355\u6982\u62EC\u4E3AdefineProperty\u5230Proxy\u7684\u8F6C\u53D8\u3002\u4ECE\u672C\u8D28\u4E0A\u770B\uFF0CProxy\u57FA\u4E8E\u53CD\u5411\u4EE3\u7406\u7684\u6027\u80FD\u53CD\u800C\u6BD4defineProperty\u5DEE\u3002"),n("p",null,"\u6839\u672C\u539F\u56E0\u662Fdiff\u7B97\u6CD5\u7684\u4F18\u5316\u3001patch\u7B49\u591A\u539F\u56E0\uFF0C\u800C\u4E0D\u662FProxy\u7279\u6027\u672C\u8EAB\u3002")],-1),c=p(`<h2 id="\u54CD\u5E94\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u54CD\u5E94\u5F0F" aria-hidden="true">#</a> \u54CD\u5E94\u5F0F</h2><h3 id="object-defineproperty" tabindex="-1"><a class="header-anchor" href="#object-defineproperty" aria-hidden="true">#</a> Object.defineProperty</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//Vue2 Object.defineProperty</span>
<span class="token keyword">const</span> initData <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">value</span><span class="token operator">:</span><span class="token number">1</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>initData<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span>key<span class="token punctuation">,</span><span class="token punctuation">{</span>
    <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u8BBF\u95EE&#39;</span><span class="token punctuation">,</span>key<span class="token punctuation">)</span>
      <span class="token keyword">return</span> initData<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">set</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u8BBE\u7F6E\u503C&#39;</span><span class="token punctuation">,</span>key<span class="token punctuation">)</span>
      initData<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> val
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// \u63A7\u5236\u53F0\u8C03\u8BD5 \u8BBE\u7F6Edata.value=3\uFF0C\u53D1\u73B0data\u6CA1\u53D8\uFF0CinitData\u53D8\u5316\u4E86</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="this-set-data-a-1" tabindex="-1"><a class="header-anchor" href="#this-set-data-a-1" aria-hidden="true">#</a> this.$set(data,a,1)</h3><blockquote><p>$set\u7684\u76EE\u7684\u662F\u7ED9\u6307\u5B9A\u5BF9\u8C61\u6DFB\u52A0\u54CD\u5E94\u5F0F\u5C5E\u6027\u540E\uFF0C\u5E76\u89E6\u53D1\u89C6\u56FE\u7684\u66F4\u65B0</p></blockquote><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">set</span><span class="token punctuation">(</span>target<span class="token operator">:</span><span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span> <span class="token operator">|</span> Object<span class="token punctuation">,</span>key<span class="token operator">:</span><span class="token builtin">any</span><span class="token punctuation">,</span>val<span class="token operator">:</span><span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">any</span><span class="token punctuation">{</span>
  <span class="token comment">//isUndef\u662F\u5224\u65ADtarget\u662F\u4E0D\u662F\u7B49\u4E8Eundefined\u6216\u8005null</span>
  <span class="token comment">//isPrimitive\u662F\u5224\u65ADtarget\u7684\u6570\u636E\u7C7B\u578B\u662F\u4E0D\u662Fstring\u3001number\u3001symbol\u3001boolean\u4E2D\u7684\u4E00\u79CD</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span>
    <span class="token function">\uFF08isUndef</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">isPrimitive</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>\uFF09
  <span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">warn</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Cannot set reactive property on undefined,null,or primitive value:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token punctuation">{</span>target<span class="token operator">:</span><span class="token builtin">any</span><span class="token punctuation">}</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">//\u6570\u7EC4\u7684\u5904\u7406</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">Array</span><span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isValidArrayIndex</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    target<span class="token punctuation">.</span>length <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>target<span class="token punctuation">.</span>lenght<span class="token punctuation">,</span>key<span class="token punctuation">)</span>
    target<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span>val<span class="token punctuation">)</span> <span class="token comment">//splice(index,length,val)\u4FEE\u6539\u4E0B\u6807\u4E3Aindex,\u957F\u5EA6\u4E3Alength\u7684\u503C\u4E3Aval</span>
    <span class="token keyword">return</span> val <span class="token comment">//\u5F53\u4F7F\u7528splice\u65B9\u6CD5\u540E\uFF0C\u539Ftarget\u7684\u88AB\u66F4\u65B0\uFF0C\u89E6\u53D1Vue2\u7684\u54CD\u5E94\u5F0F</span>
  <span class="token punctuation">}</span>

  <span class="token comment">//\u5BF9\u8C61\uFF0C\u5E76\u4E14\u8BE5\u5C5E\u6027\u539F\u6765\u5DF2\u5B58\u5728\u4E8E\u5BF9\u8C61\u4E2D\uFF0C\u5219\u76F4\u63A5\u66F4\u65B0</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>key <span class="token keyword">in</span> target <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token punctuation">(</span>key <span class="token keyword">in</span> Object<span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    target<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> val
    <span class="token keyword">return</span> val
  <span class="token punctuation">}</span>

  <span class="token comment">//vue \u7ED9\u54CD\u5E94\u5F0F\u5BF9\u8C61\uFF08\u6BD4\u5982data\u91CC\u5B9A\u4E49\u7684\u5BF9\u8C61\uFF09\u90FD\u52A0\u4E86 _ob_ \u5C5E\u6027</span>
  <span class="token comment">//\u82E5\u4E00\u4E2A\u5BF9\u8C61\u91CC\u6709 _ob_ \u5C5E\u6027\uFF0C\u90A3\u4E48\u5C31\u8BF4\u660E\u8FD9\u4E2A\u5BF9\u8C61\u662F\u54CD\u5E94\u5F0F\u5BF9\u8C61\uFF0C\u4FEE\u6539\u5BF9\u8C61\u5DF2\u6709\u5C5E\u6027\u65F6\u5C31\u4F1A\u89E6\u53D1\u9875\u9762\u6E32\u67D3</span>
  <span class="token comment">//\u975E data \u91CC\u5B9A\u4E49\u7684\u5C31\u4E0D\u662F\u54CD\u5E94\u5F0F\u5BF9\u8C61(\u4EE5\u4E0B\u662F\u5224\u65AD\u662F\u5426\u4E3A\u54CD\u5E94\u5F0F\u5BF9\u8C61)</span>
  <span class="token keyword">const</span> ob <span class="token operator">=</span> <span class="token punctuation">(</span>target<span class="token operator">:</span><span class="token builtin">any</span><span class="token punctuation">)</span><span class="token punctuation">.</span>_ob_

  <span class="token keyword">if</span><span class="token punctuation">(</span>target<span class="token punctuation">.</span>_isVue <span class="token operator">||</span> <span class="token punctuation">(</span>ob <span class="token operator">&amp;&amp;</span> ob<span class="token punctuation">.</span>vmCount<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;product&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token function">warn</span><span class="token punctuation">(</span>
      <span class="token string">&#39;Avoid adding reactive properties to a Vue instance or its root $date&#39;</span> <span class="token operator">+</span>
      <span class="token string">&#39;at runtime - declare it upfront in the data options.&#39;</span>
    <span class="token punctuation">)</span>
    <span class="token keyword">return</span> val
  <span class="token punctuation">}</span>

  <span class="token comment">//\u4E0D\u662F\u54CD\u5E94\u5F0F\u5BF9\u8C61</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>ob<span class="token punctuation">)</span><span class="token punctuation">{</span>
    target<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> val
    <span class="token keyword">return</span> val
  <span class="token punctuation">}</span>

  <span class="token comment">//\u662F\u54CD\u5E94\u5F0F\u5BF9\u8C61\uFF0C\u8FDB\u884C\u4F9D\u8D56\u6536\u96C6</span>
  <span class="token function">defineReactive</span><span class="token punctuation">(</span>ob<span class="token punctuation">.</span>value<span class="token punctuation">,</span>key<span class="token punctuation">,</span>val<span class="token punctuation">)</span>

  <span class="token comment">//\u89E6\u53D1\u66F4\u65B0\u89C6\u56FE</span>
  ob<span class="token punctuation">.</span>dep<span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> val
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="proxy" tabindex="-1"><a class="header-anchor" href="#proxy" aria-hidden="true">#</a> Proxy</h3><blockquote><p>\u7ED3\u5408Object.defineProperty,\u53EF\u4EE5\u53BB\u8BF4\u660Evue2\u548Cvue3\u5728\u54CD\u5E94\u5F0F\u8FD9\u5757\u5982\u4F55\u83B7\u53D6\u548C\u4FEE\u6539</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> initData <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span><span class="token number">1</span> <span class="token punctuation">}</span>
<span class="token keyword">const</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>initData<span class="token punctuation">,</span><span class="token punctuation">{</span>
  <span class="token function-variable function">get</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span>key<span class="token punctuation">,</span>receiver</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u8BBF\u95EE&#39;</span>\uFF0Ckey<span class="token punctuation">)</span>
    <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span>key<span class="token punctuation">,</span>receiver<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">set</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span>key<span class="token punctuation">,</span>value<span class="token punctuation">,</span>receiver</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u4FEE\u6539&#39;</span>\uFF0Ckey<span class="token punctuation">)</span>
    <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span>key<span class="token punctuation">,</span>value<span class="token punctuation">,</span>receiver<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// \u63A7\u5236\u53F0\u8C03\u8BD5 \u8BBE\u7F6Eproxy.value2 = 2\uFF0Cproxy\u548CinitData\u90FD\u53D8\u5316\u4E86</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>proxy\u4E5F\u6709\u5F88\u591A ES6 \u7684\u5199\u6CD5\uFF0C\u901A\u8FC7 polifill \u8F6C\u6210 ES5</p><p><code>\u884D\u751F</code>\uFF1A\u5982\u4F55\u5C06 esNext =&gt; es5? \u5E38\u7528\u7684\u662F babel \u53BB\u8F6C\uFF0C\u56FD\u5916\u4E3B\u6D41\u4F7F\u7528 swc(Rust\u7F16\u5199)</p>`,11),i=[o,c];function l(u,r){return a(),t("div",null,i)}var d=s(e,[["render",l],["__file","0228.html.vue"]]);export{d as default};
